#include<iostream>
using namespace std;
int merge(int a[],int l,int m,int r,int &c)
{
	int s2=0;
	int n1=m-l+1;
	int n2=r-m;
	int L[n1],R[n2];
	for(int i=0;i<n1;i++)
	{
		L[i]=a[l+i];
	}
	for(int j=0;j<n2;j++)
	{
		R[j]=a[m+1+j];
	}
	int i=0,j=0,k=l;
	while(i<n1 && j<n2)
	{
		c++;
		if(L[i]<=R[j])
		a[k++]=L[i++];
		else
		{
			s2+=n1-i;
			a[k++]=R[j++];
		}
		
	}
	while(i<n1)
	a[k++]=L[i++];
	while(j<n2)
	a[k++]=R[j++];
	
	return s2;
}
int msort(int a[],int l,int r,int &c)
{
	int s1=0;
	if(l<r)
	{
		int mid=(r+l)/2;
		s1+=msort(a,l,mid,c);
		s1+=msort(a,mid+1,r,c);
		s1+=merge(a,l,mid,r,c);
	}
	return s1;
}

int main()
{
	cout<<"Enter number of test cases=";
	int n,m,i,j;
	cin>>m;
	for(i=0;i<m;i++)
	{
		int c=0;
		cout<<"Enter the number of elements=";
		cin>>n;
		int a[n];
		cout<<"Enter the elements:";
		for(j=0;j<n;j++)
		{
			cin>>a[j];
		}
		int s=msort(a,0,n-1,c);
		cout<<"sorted array=";
		for(j=0;j<n;j++)
		{
			cout<<a[j]<<endl;
		}
		cout<<"Comparisons="<<c<<endl;
		cout<<"Inversions="<<s<<endl;
	}
}
